(function (React, ReactDOM, d3) {
  "use strict";

  var React__default = "default" in React ? React["default"] : React;
  ReactDOM =
    ReactDOM && ReactDOM.hasOwnProperty("default")
      ? ReactDOM["default"]
      : ReactDOM;

  const csvUrl =
    "https://gist.githubusercontent.com/curran/0ac4077c7fc6390f5dd33bf5c06cb5ff/raw/605c54080c7a93a417a3cea93fd52e7550e76500/UN_Population_2019.csv";

  const width = 960;
  const height = 500;
  const margin = { top: 20, right: 20, bottom: 20, left: 200 };

  const App = () => {
    const [data, setData] = React.useState(null);

    React.useEffect(() => {
      const row = (d) => {
        d.Population = +d["2020"];
        return d;
      };
      d3.csv(csvUrl, row).then((data) => {
        setData(data.slice(0, 10));
      });
    }, []);

    if (!data) {
      return React__default.createElement("pre", null, "Loading...");
    }

    const innerHeight = height - margin.top - margin.bottom;
    const innerWidth = width - margin.left - margin.right;

    const yScale = d3
      .scaleBand()
      .domain(data.map((d) => d.Country))
      .range([0, innerHeight]);

    const xScale = d3
      .scaleLinear()
      .domain([0, d3.max(data, (d) => d.Population)])
      .range([0, innerWidth]);

    return React__default.createElement(
      "svg",
      { width: width, height: height },
      React__default.createElement(
        "g",
        { transform: `translate(${margin.left},${margin.top})` },
        xScale.ticks().map((tickValue) =>
          React__default.createElement(
            "g",
            { key: tickValue, transform: `translate(${xScale(tickValue)},0)` },
            React__default.createElement("line", {
              y2: innerHeight,
              stroke: "black",
            }),
            React__default.createElement(
              "text",
              {
                style: { textAnchor: "middle" },
                dy: ".71em",
                y: innerHeight + 3,
              },
              tickValue
            )
          )
        ),
        yScale.domain().map((tickValue) =>
          React__default.createElement(
            "text",
            {
              key: tickValue,
              style: { textAnchor: "end" },
              x: -3,
              dy: ".32em",
              y: yScale(tickValue) + yScale.bandwidth() / 2,
            },
            tickValue
          )
        ),
        data.map((d) =>
          React__default.createElement("rect", {
            key: d.Country,
            x: 0,
            y: yScale(d.Country),
            width: xScale(d.Population),
            height: yScale.bandwidth(),
          })
        )
      )
    );
  };
  const rootElement = document.getElementById("root");
  ReactDOM.render(React__default.createElement(App, null), rootElement);
})(React, ReactDOM, d3);

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlQ2FsbGJhY2ssIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IHsgY3N2LCBhcmMsIHBpZSwgc2NhbGVCYW5kLCBzY2FsZUxpbmVhciwgbWF4IH0gZnJvbSAnZDMnO1xuXG5jb25zdCBjc3ZVcmwgPVxuICAnaHR0cHM6Ly9naXN0LmdpdGh1YnVzZXJjb250ZW50LmNvbS9jdXJyYW4vMGFjNDA3N2M3ZmM2MzkwZjVkZDMzYmY1YzA2Y2I1ZmYvcmF3LzYwNWM1NDA4MGM3YTkzYTQxN2EzY2VhOTNmZDUyZTc1NTBlNzY1MDAvVU5fUG9wdWxhdGlvbl8yMDE5LmNzdic7XG5cbmNvbnN0IHdpZHRoID0gOTYwO1xuY29uc3QgaGVpZ2h0ID0gNTAwO1xuY29uc3QgbWFyZ2luID0geyB0b3A6IDIwLCByaWdodDogMjAsIGJvdHRvbTogMjAsIGxlZnQ6IDIwMCB9O1xuXG5jb25zdCBBcHAgPSAoKSA9PiB7XG4gIGNvbnN0IFtkYXRhLCBzZXREYXRhXSA9IHVzZVN0YXRlKG51bGwpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3Qgcm93ID0gZCA9PiB7XG4gICAgICBkLlBvcHVsYXRpb24gPSArZFsnMjAyMCddO1xuICAgICAgcmV0dXJuIGQ7XG4gICAgfTtcbiAgICBjc3YoY3N2VXJsLCByb3cpLnRoZW4oZGF0YSA9PiB7XG4gICAgICBzZXREYXRhKGRhdGEuc2xpY2UoMCwgMTApKTtcbiAgICB9KTtcbiAgfSwgW10pO1xuXG4gIGlmICghZGF0YSkge1xuICAgIHJldHVybiA8cHJlPkxvYWRpbmcuLi48L3ByZT47XG4gIH1cblxuICBjb25zdCBpbm5lckhlaWdodCA9IGhlaWdodCAtIG1hcmdpbi50b3AgLSBtYXJnaW4uYm90dG9tO1xuICBjb25zdCBpbm5lcldpZHRoID0gd2lkdGggLSBtYXJnaW4ubGVmdCAtIG1hcmdpbi5yaWdodDtcblxuICBjb25zdCB5U2NhbGUgPSBzY2FsZUJhbmQoKVxuICAgIC5kb21haW4oZGF0YS5tYXAoZCA9PiBkLkNvdW50cnkpKVxuICAgIC5yYW5nZShbMCwgaW5uZXJIZWlnaHRdKTtcblxuICBjb25zdCB4U2NhbGUgPSBzY2FsZUxpbmVhcigpXG4gICAgLmRvbWFpbihbMCwgbWF4KGRhdGEsIGQgPT4gZC5Qb3B1bGF0aW9uKV0pXG4gICAgLnJhbmdlKFswLCBpbm5lcldpZHRoXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8c3ZnIHdpZHRoPXt3aWR0aH0gaGVpZ2h0PXtoZWlnaHR9PlxuICAgICAgPGcgdHJhbnNmb3JtPXtgdHJhbnNsYXRlKCR7bWFyZ2luLmxlZnR9LCR7bWFyZ2luLnRvcH0pYH0+XG4gICAgICAgIHt4U2NhbGUudGlja3MoKS5tYXAodGlja1ZhbHVlID0+IChcbiAgICAgICAgICA8ZyBrZXk9e3RpY2tWYWx1ZX0gdHJhbnNmb3JtPXtgdHJhbnNsYXRlKCR7eFNjYWxlKHRpY2tWYWx1ZSl9LDApYH0+XG4gICAgICAgICAgICA8bGluZSB5Mj17aW5uZXJIZWlnaHR9IHN0cm9rZT1cImJsYWNrXCIgLz5cbiAgICAgICAgICAgIDx0ZXh0XG4gICAgICAgICAgICAgIHN0eWxlPXt7IHRleHRBbmNob3I6ICdtaWRkbGUnIH19XG4gICAgICAgICAgICAgIGR5PVwiLjcxZW1cIlxuICAgICAgICAgICAgICB5PXtpbm5lckhlaWdodCArIDN9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHt0aWNrVmFsdWV9XG4gICAgICAgICAgICA8L3RleHQ+XG4gICAgICAgICAgPC9nPlxuICAgICAgICApKX1cbiAgICAgICAge3lTY2FsZS5kb21haW4oKS5tYXAodGlja1ZhbHVlID0+IChcbiAgICAgICAgICA8dGV4dFxuICAgICAgICAgICAga2V5PXt0aWNrVmFsdWV9XG4gICAgICAgICAgICBzdHlsZT17eyB0ZXh0QW5jaG9yOiAnZW5kJyB9fVxuICAgICAgICAgICAgeD17LTN9XG4gICAgICAgICAgICBkeT1cIi4zMmVtXCJcbiAgICAgICAgICAgIHk9e3lTY2FsZSh0aWNrVmFsdWUpICsgeVNjYWxlLmJhbmR3aWR0aCgpIC8gMn1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7dGlja1ZhbHVlfVxuICAgICAgICAgIDwvdGV4dD5cbiAgICAgICAgKSl9XG4gICAgICAgIHtkYXRhLm1hcChkID0+IChcbiAgICAgICAgICA8cmVjdFxuICAgICAgICAgICAga2V5PXtkLkNvdW50cnl9XG4gICAgICAgICAgICB4PXswfVxuICAgICAgICAgICAgeT17eVNjYWxlKGQuQ291bnRyeSl9XG4gICAgICAgICAgICB3aWR0aD17eFNjYWxlKGQuUG9wdWxhdGlvbil9XG4gICAgICAgICAgICBoZWlnaHQ9e3lTY2FsZS5iYW5kd2lkdGgoKX1cbiAgICAgICAgICAvPlxuICAgICAgICApKX1cbiAgICAgIDwvZz5cbiAgICA8L3N2Zz5cbiAgKTtcbn07XG5jb25zdCByb290RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb290Jyk7XG5SZWFjdERPTS5yZW5kZXIoPEFwcCAvPiwgcm9vdEVsZW1lbnQpO1xuIl0sIm5hbWVzIjpbInVzZVN0YXRlIiwidXNlRWZmZWN0IiwiY3N2IiwiUmVhY3QiLCJzY2FsZUJhbmQiLCJzY2FsZUxpbmVhciIsIm1heCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0VBSUEsTUFBTSxNQUFNO0lBQ1YsZ0pBQWdKLENBQUM7O0VBRW5KLE1BQU0sS0FBSyxHQUFHLEdBQUcsQ0FBQztFQUNsQixNQUFNLE1BQU0sR0FBRyxHQUFHLENBQUM7RUFDbkIsTUFBTSxNQUFNLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLENBQUM7O0VBRTdELE1BQU0sR0FBRyxHQUFHLE1BQU07SUFD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
